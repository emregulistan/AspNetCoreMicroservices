version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  
  checkoutdb:
    container_name: checkoutdb
    restart: always
    ports:
      - "6379:6379"


  identitydb:
    container_name: identitydb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=IdentityDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"  
        

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"


  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin   


  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:7000"
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data


  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8011:80"


  checkout.api:
    container_name: checkout.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=checkoutdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - checkoutdb
      - rabbitmq    
    ports:
      - "8012:80"


  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderingConnectionString=Server=orderdb;TrustServerCertificate=True;MultiSubnetFailover=True;Encrypt=False;Database=DockerOrderDb;User Id=sa;Password=SwN12345678;"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8013:80"  
      
   
  identity.api:
    container_name: identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=identitydb;Port=5432;Database=DockerIdentityDb;Integrated Security=true;User Id=admin;Password=admin1234;Pooling=true;"    
    depends_on:
      - identitydb
    ports:
      - "8014:80"


  ocelotapigateway:
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - catalog.api
      - checkout.api
      - ordering.api
      - identity.api
    ports:
      - "8015:80"